package adm_test

import (
	"encoding/hex"
	"net"
	"testing"

	"github.com/sxwebdev/protocol-template/internal/config"
	"github.com/sxwebdev/protocol-template/internal/protocol/adm"
	"github.com/sxwebdev/protocol-template/internal/protocol/base"
	"github.com/tkcrm/modules/logger"
)

var testFirstPacket = "010042033836393836373033303531343439332101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053"
var testData = "0100447c24d48e4000a5675e42b27c16425e060000008700282391eee561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24c48e4800a5675e42b27c1642da0200000087002a03f5ede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24c38e4800a5675e42b27c1642420400000087002a03ecede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24c28e2800a3675e42917c164232050a000087002a03e8ede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24c18e284000000000000000008e080a000000000000e3ede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24c08e28400000000000000000a40100000000000000d9ede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24bf8e28400000000000000000f20d00000000000000cfede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24be8e28400000000000000000f20d00000000000000c5ede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24bd8e28400000000000000000a20d0a000000000000bbede561000000000000000000003a0000002000fa0002001f26000081870000000000000000000000010100447c24bc8e28400000000000000000e80d0a000000000000b1ede561000000000000000000003a0000001f00fa0002001f26000081870000000000000000000000010100447c24bb8e284000000000000000005c0d0a000000000000a7ede561000000000000000000003a0000001f00fa0002001f26000081870000000000000000000000010100447c24ba8e28400000000000000000700d0a0000000000009dede561000000000000000000003a0000001f00fa0002001f26000081870000000000000000000000010100447c24b98e284000000000000000007a0d0a00000000000093ede561000000000000000000003a0000001f00fa0002001f26000081870000000000000000000000010100447c24b88e284000000000000000008e0d1400000000000089ede561000000000000000000003a0000001f00fa0002001f26000081870000000000000000000000010100447c24b78e28400000000000000000d40d0a0000000000007fede561000000000000000000003a0000001f00fa0002001f2600008187000000000000000000000001"

func newProtocol() base.IBase {
	c := config.New()
	l := logger.DefaultLogger("debug", "tracker")
	_base := base.New(c, l, nil, "adm")
	return adm.New(_base)
}

func Test_Decode(t *testing.T) {
	tests := []struct {
		name string
		data string
	}{
		{"first packet", testFirstPacket},
		{"full packet", testData},
	}

	server, client := net.Pipe()
	conn := base.NewConn(client)
	protocol := newProtocol()

	for _, tt := range tests {
		data, err := hex.DecodeString(tt.data)
		if err != nil {
			t.Fatal(err)
		}

		go server.Write(data)

		_, err = protocol.Decode(conn)
		if err != nil {
			t.Fatalf("test: %s faield with error: %v\n", tt.name, err)
		}

		t.Logf("test %s successfylly finished\n", tt.name)
	}
}
